{"version":3,"sources":["components/DayWeatherCard/index.js","components/MainWeather/index.js","components/WeekWeatherCard/index.js","components/DetailedWeather/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DayWeatherCard","_this","this","counterItems","props","data","hourly","map","item","length","react_default","a","createElement","key","time","className","src","weatherIconUrl","value","alt","weatherDesc","tempC","FeelsLikeC","windspeedKmph","humidity","pressure","Component","MainWeather","state","city","status","handleChange","e","setState","target","enterCity","preventDefault","subCity","axios","get","then","res","request","alert","catch","err","console","log","onSubmit","onChange","type","placeholder","fa","query","weather","date","maxtempC","mintempC","components_DayWeatherCard","react_router_dom","to","pathname","WeekWeatherCard","DetailedWeather","location","components_WeekWeatherCard","Header","wi","App","Fragment","components_Header","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.be4bfbeb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./dayWeatherCard.scss\";\r\n\r\nclass DayWeatherCard extends Component {\r\n\r\n    render() {\r\n        let counterItems = 0;\r\n        return this.props.data.hourly.map(item => {\r\n            counterItems++;\r\n\r\n            if (counterItems <= this.props.data.hourly.length) {\r\n                return (\r\n                    <div key={item.time} className=\"hour-block\">\r\n                        <p>{item.time}</p>\r\n                        <img src={item.weatherIconUrl[0].value}\r\n                             alt=\"weather icon\"/>\r\n                        <p>{item.weatherDesc[0].value}</p>\r\n                        <p><b>Temperature:</b> {item.tempC} 째C</p>\r\n                        <p><b>Feels like:</b> {item.FeelsLikeC} 째C</p>\r\n                        <p><b>Winds speed:</b> {item.windspeedKmph} km</p>\r\n                        <p><b>Humidity:</b> {item.humidity} %</p>\r\n                        <p><b>Pressure:</b> {item.pressure} mb</p>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default DayWeatherCard;\r\n","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport {FaSearch, FaReact} from 'react-icons/fa';\r\nimport {Link} from 'react-router-dom';\r\nimport DayWeatherCard from '../DayWeatherCard';\r\nimport './mainWeather.scss';\r\n\r\nclass MainWeather extends Component {\r\n    state = {\r\n        city: '',\r\n        data: null,\r\n        status: false\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({city: e.target.value});\r\n    };\r\n\r\n    enterCity = (e) => {\r\n        e.preventDefault();\r\n        const subCity = {\r\n            city: this.state.city\r\n        };\r\n        axios.get(\"http://api.worldweatheronline.com/premium/v1/weather.ashx?key=314c240e44fd436d93f135946192003&q=\" + subCity.city + \"&num_of_days=7&format=json\")\r\n            .then(res => {\r\n                if (res.data.data.request) {\r\n                    this.setState({data: res.data, status: true})\r\n                } else {\r\n                    this.setState({status: false, city: ''});\r\n                    alert('Wrong city name entered! Please, check for correct data.')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.status === false) {\r\n            return (\r\n                <section className=\"main-section\">\r\n                    <div className=\"container\">\r\n                        <form onSubmit={this.enterCity}>\r\n                            <input className='input' onChange={this.handleChange} type=\"text\"\r\n                                   placeholder=\"Enter city here...\"\r\n                                   value={this.state.city}/>\r\n                            <button className='button' type=\"submit\"><FaSearch/></button>\r\n                        </form>\r\n                        <p className=\"react-logo\"><FaReact/></p>\r\n                    </div>\r\n                </section>\r\n            );\r\n        } else {\r\n            return (\r\n                <section className=\"main-section\">\r\n                    <div className=\"container\">\r\n                        <form onSubmit={this.enterCity}>\r\n                            <input className='input' onChange={this.handleChange} type=\"text\"\r\n                                   placeholder=\"Enter city here...\"\r\n                                   value={this.state.city}/>\r\n                            <button className='button' type=\"submit\"><FaSearch/></button>\r\n                        </form>\r\n                        <span className='first-info'><b>Location:</b> {this.state.data.data.request[0].query}</span>\r\n                        <span className='first-info'><b>Date:</b> {this.state.data.data.weather[0].date}</span>\r\n                        <span\r\n                            className='first-info'><b>Max temperature:</b> {this.state.data.data.weather[0].maxtempC} 째C</span>\r\n                        <span\r\n                            className='first-info'><b>Min temperature:</b> {this.state.data.data.weather[0].mintempC} 째C</span>\r\n                        <br/>\r\n                        <DayWeatherCard data={this.state.data.data.weather[0]}/>\r\n                        <div>\r\n                            <Link className='detailed'\r\n                                  to={{pathname: \"/detailed\", state: {data: this.state.data.data}}}>Weather\r\n                                Forecast For a Week</Link>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainWeather;\r\n\r\n","import React, {Component} from 'react';\r\nimport \"./weekWeatherCard.scss\";\r\n\r\nclass WeekWeatherCard extends Component {\r\n\r\n    render() {\r\n        let counterItems = 0;\r\n        return this.props.data.map(item => {\r\n            counterItems++;\r\n\r\n            if (counterItems <= this.props.data.length) {\r\n                return (\r\n                    <div key={item.date} className=\"day-block\">\r\n                        <p><b>Date:</b> {item.date}</p>\r\n                        <img src={item.hourly[4].weatherIconUrl[0].value} alt=\"weather icon\"/>\r\n                        <p>In Total - {item.hourly[4].weatherDesc[0].value}</p>\r\n                        <p><b>Min Temperature:</b> {item.mintempC} 째C</p>\r\n                        <p><b>Max Temperature:</b> {item.maxtempC} 째C</p>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default WeekWeatherCard;\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport WeekWeatherCard from '../WeekWeatherCard';\r\nimport './detailedWeather.scss';\r\nimport {FaArrowLeft} from 'react-icons/fa';\r\n\r\nclass DetailedWeather extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"main-section\">\r\n                <div className=\"container\">\r\n                    <div className='go-back'>\r\n                        <Link className='go-back' to=\"/\"><FaArrowLeft/> Back to start page</Link>\r\n                    </div>\r\n                    <h2 className='detailed-head'>Weather Forecast For a\r\n                        Week: <b>{this.props.location.state.data.request[0].query}</b></h2>\r\n                    <WeekWeatherCard data={this.props.location.state.data.weather}/>\r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DetailedWeather;\r\n\r\n","import React, {Component} from 'react';\r\nimport './header.scss';\r\nimport {Link} from 'react-router-dom';\r\nimport {WiDaySunnyOvercast} from 'react-icons/wi'\r\n\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <section className='container main-flex'>\r\n                    <Link to='/' className=\"logo\"><WiDaySunnyOvercast/></Link>\r\n                    <div className='flex-blocks'>\r\n                        <h1>FORECAST REACT APP</h1>\r\n                        <p>This is a small app, wrote on React and used weather API to show you weather in cities. Just\r\n                            write city\r\n                            name in search field and get this!</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\nimport {Switch, Route} from \"react-router-dom\";\nimport MainWeather from './components/MainWeather';\nimport DetailedWeather from './components/DetailedWeather';\nimport Header from './components/Header';\nimport './App.scss';\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Header/>\n                <Switch>\n                    <Route exact path=\"/\" component={MainWeather}/>\n                    <Route exact path=\"/detailed\" component={DetailedWeather}/>\n                </Switch>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}